"""
Django settings for nova project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from nova.conf.db import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ubbn#egj^w%-=x88rrj_7@ej$j7^q_d%4$w_m*%&)5eafb%7a9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "True")

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'djcelery',
    'siteuser.users',
    'siteuser.upload_avatar',
    'siteuser.notify',
    'core'
]
# AUTH_USER_MODEL = 'users.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'siteuser.middleware.User',
]

ROOT_URLCONF = 'nova.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')]
        'DIRS': "siteuser.SITEUSER_TEMPLATE"
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'siteuser.context_processors.social_sites',
            ],
        },
    },
]


WSGI_APPLICATION = 'nova.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    )
}

# USERS_REGISTRATION_OPEN = True
#
# USERS_VERIFY_EMAIL = False
#
# USERS_AUTO_LOGIN_ON_ACTIVATION = True
#
# USERS_EMAIL_CONFIRMATION_TIMEOUT_DAYS = 3
#
# # Specifies minimum length for passwords:
# USERS_PASSWORD_MIN_LENGTH = 5
#
# # Specifies maximum length for passwords:
# USERS_PASSWORD_MAX_LENGTH = None
#
# # the complexity validator, checks the password strength
# USERS_CHECK_PASSWORD_COMPLEXITY = True
#
# USERS_SPAM_PROTECTION = True  # important!

#  ---------------------------------------------------------
#  Email
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#
# EMAIL_USE_TLS = False
# EMAIL_HOST = 'smtp.139.com'
# EMAIL_PORT = 25
# EMAIL_HOST_USER = 'yerik_shu@139.com'
# EMAIL_HOST_PASSWORD = 'acvcqwdqads'
# DEFAULT_FROM_EMAIL = 'mail@tuweizhong.com'
#  ---------------------------------------------------------

# USERS_PASSWORD_POLICY = {
#         'UPPER': 0,       # Uppercase 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
#         'LOWER': 0,       # Lowercase 'abcdefghijklmnopqrstuvwxyz'
#         'DIGITS': 0,      # Digits '0123456789'
#         'PUNCTUATION': 0  # Punctuation """!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
# }


class SITEUSER_ACCOUNT_MIXIN(object):
    login_template = 'login.html'  # 你项目的登录页面模板
    register_template = 'register.html'  # 你项目的注册页面模板
    reset_passwd_template = 'reset_password.html'  # 忘记密码的重置密码模板
    change_passwd_template = 'change_password.html'  # 登录用户修改密码的模板
    reset_passwd_email_title = u'重置密码'  # 重置密码发送电子邮件的标题
    reset_passwd_link_expired_in = 24  # 重置密码链接多少小时后失效

    def get_login_context(self, request):
        return {}

    def get_register_context(self, request):
        return {}